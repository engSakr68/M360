# Add this to the post_install block in your Podfile

# Enhanced Privacy Bundle Fix for url_launcher_ios
puts "🔧 Setting up enhanced privacy bundle fix for url_launcher_ios..."

# Get the Runner target
app_target = installer.pods_project.targets.find { |t| t.name == 'Runner' }

if app_target
  # Remove any existing privacy script phases
  app_target.shell_script_build_phases.dup.each do |phase|
    if phase.name && (phase.name.include?('Privacy') || phase.name.include?('privacy'))
      app_target.build_phases.delete(phase)
      puts "• Removed existing privacy script phase: #{phase.name}"
    end
  end

  # Create an enhanced privacy bundle copy script phase
  privacy_phase = app_target.new_shell_script_build_phase('[CP] Copy Privacy Bundles (Enhanced)')
  privacy_phase.shell_path = '/bin/sh'
  privacy_phase.show_env_vars_in_log = false
  privacy_phase.shell_script = <<~SCRIPT
    set -e
    set -u
    set -o pipefail
    
    echo "=== Enhanced Privacy Bundle Copy ==="
    
    SRCROOT="${SRCROOT}"
    BUILT_PRODUCTS_DIR="${BUILT_PRODUCTS_DIR}"
    CONFIGURATION_BUILD_DIR="${CONFIGURATION_BUILD_DIR}"
    
    echo "SRCROOT: ${SRCROOT}"
    echo "BUILT_PRODUCTS_DIR: ${BUILT_PRODUCTS_DIR}"
    echo "CONFIGURATION_BUILD_DIR: ${CONFIGURATION_BUILD_DIR}"
    
    # List of plugins that need privacy bundles
    PRIVACY_PLUGINS=(
      "image_picker_ios"
      "url_launcher_ios"
      "sqflite_darwin"
      "permission_handler_apple"
      "shared_preferences_foundation"
      "share_plus"
      "path_provider_foundation"
      "package_info_plus"
    )
    
    # Function to copy privacy bundle
    copy_privacy_bundle() {
      local plugin_name="$1"
      local bundle_dir="${SRCROOT}/${plugin_name}_privacy.bundle"
      local dest_dir="${BUILT_PRODUCTS_DIR}/${plugin_name}/${plugin_name}_privacy.bundle"
      
      echo "Processing privacy bundle for: $plugin_name"
      
      if [ -d "$bundle_dir" ]; then
        # Create destination directory
        mkdir -p "$(dirname "$dest_dir")"
        
        # Copy the bundle
        cp -R "$bundle_dir" "$dest_dir"
        echo "✅ Copied $plugin_name privacy bundle to: $dest_dir"
        
        # Verify the copy
        if [ -f "$dest_dir/${plugin_name}_privacy" ]; then
          echo "✅ Verified $plugin_name privacy bundle copy"
        else
          echo "❌ Failed to verify $plugin_name privacy bundle copy"
          return 1
        fi
      else
        echo "⚠️ $plugin_name privacy bundle not found at $bundle_dir"
        # Create minimal privacy bundle as fallback
        mkdir -p "$dest_dir"
        cat > "$dest_dir/${plugin_name}_privacy" << 'PRIVACY_EOF'
{
  "NSPrivacyTracking": false,
  "NSPrivacyCollectedDataTypes": [],
  "NSPrivacyAccessedAPITypes": []
}
PRIVACY_EOF
        echo "✅ Created minimal privacy bundle for $plugin_name"
      fi
    }
    
    # Copy privacy bundles for all plugins
    for plugin in "${PRIVACY_PLUGINS[@]}"; do
      copy_privacy_bundle "$plugin"
    done
    
    # Also copy to alternative locations that might be needed
    if [ -n "${CONFIGURATION_BUILD_DIR}" ] && [ "${CONFIGURATION_BUILD_DIR}" != "${BUILT_PRODUCTS_DIR}" ]; then
      echo "Also copying to CONFIGURATION_BUILD_DIR: ${CONFIGURATION_BUILD_DIR}"
      for plugin in "${PRIVACY_PLUGINS[@]}"; do
        copy_privacy_bundle "$plugin"
      done
    fi
    
    echo "=== Enhanced Privacy Bundle Copy Complete ==="
  SCRIPT
  
  # Move this phase to be early in the build process (after dependencies but before compilation)
  app_target.build_phases.move(privacy_phase, 1)
  puts "✅ Added enhanced privacy bundle copy phase to Runner target"
else
  puts "⚠️ Runner target not found in Pods project"
end
